server:
  port: ${SERVER_PORT:8084}
  servlet:
    context-path: /

spring:
  application:
    name: ai-recommend-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:AiRecommendationDB}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

ai:
  service:
    url: ${AI_SERVICE_URL:http://localhost:8080/ai}
    timeout: ${AI_SERVICE_TIMEOUT:30000}


external:
  claude-ai:
    api-key: ${CLAUDE_AI_API_KEY:your-claude-api-key}
    base-url: ${CLAUDE_AI_BASE_URL:https://api.anthropic.com}
    model: ${CLAUDE_AI_MODEL:claude-3-sonnet-20240229}
    max-tokens: ${CLAUDE_AI_MAX_TOKENS:2000}
  weather-api:
    api-key: ${WEATHER_API_KEY:your-weather-api-key}
    base-url: ${WEATHER_API_BASE_URL:https://api.openweathermap.org/data/2.5}
  store-service:
    base-url: ${STORE_SERVICE_URL:http://localhost:8082}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  api-docs:
    path: /api-docs

logging:
  level:
    com.won.smarketing.recommend: ${LOG_LEVEL:DEBUG}

jwt:
  secret: ${JWT_SECRET:mySecretKeyForJWTTokenGenerationAndValidation123456789}
  access-token-validity: ${JWT_ACCESS_VALIDITY:3600000}
  refresh-token-validity: ${JWT_REFRESH_VALIDITY:604800000}
